{"version":3,"sources":["Quizzica.js","Quiz.js","QuizzicaQuiz.js","App.js","index.js"],"names":["Quizzica","props","className","onClick","handler","Quiz","items","question","category","type","difficulty","options","map","item","userAnswer","isDone","correct_answer","event","optionClick","QuizzicaQuiz","React","useState","quizData","setQuizData","setIsDone","attempted","unattempted","outputData","setOutputData","play","setPlay","optionClickHandler","quizItem","prev","id","target","textContent","useEffect","fetch","then","res","json","data","getShuffledArray","array","currentIndex","length","randIndex","Math","floor","random","temp","quizDataArray","nanoid","incorrect_answers","getData","results","quiz","attempt","filter","unattempt","src","alt","App","initial","setInitial","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.894c0da3.chunk.js","sourcesContent":["export default function Quizzica(props){\r\nreturn (\r\n  <div className=\"start-page\">\r\n    <h3>Quizzica</h3>\r\n    <p> It's a quiz App</p>\r\n    <button onClick={props.handler}>start Quiz</button>\r\n  </div>\r\n)\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function Quiz(props){\r\n  return (\r\n        <div className=\"quiz-box\">\r\n              <p>\r\n                {props.items.question}\r\n              </p>\r\n              <div className=\"quiz-type\">\r\n                    <span>Category : {props.items.category}</span>\r\n                    <span>Type : {props.items.type}</span>\r\n                    <span>Difficulty : {props.items.difficulty}</span>\r\n              </div>\r\n              <ul className=\"quiz-options\">\r\n                {props.items.options.map((item)=>{\r\n                      \r\n                    return (<li key={item} className={\r\n                      (props.items.userAnswer===item?'selected ':'')\r\n                      +(props.isDone && props.items.correct_answer===item?'correct-answer ':'')\r\n                      +(props.isDone && props.items.userAnswer===item && item!==props.items.correct_answer?'wrong-answer':'')}\r\n                         onClick={(event)=>props.optionClick(event,props.items)}>\r\n                         {item}\r\n                      </li>)\r\n                })}\r\n              </ul>\r\n        </div>\r\n        )\r\n}","import React from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Quiz from \"./Quiz\";\r\nexport default function QuizzicaQuiz() {\r\n  const [quizData, setQuizData] = React.useState([]);\r\n  const [isDone,setIsDone] = React.useState(false);\r\n  const [outputData,setOutputData]=React.useState([{attempted:0,unattempted:0}])\r\n  const [play,setPlay]=React.useState(false);\r\n  React.useEffect(() => {\r\n          fetch(\"https://opentdb.com/api.php?amount=10\")\r\n            .then((res) => res.json())\r\n            .then((data) => getData(data.results));\r\n      }, [play]);\r\n\r\n  function getData(data) {\r\n    function getShuffledArray(array) {\r\n      let len = array.length,\r\n        currentIndex;\r\n      for (currentIndex = len - 1; currentIndex > 0; currentIndex--) {\r\n        let randIndex = Math.floor(Math.random() * (currentIndex + 1));\r\n        var temp = array[currentIndex];\r\n        array[currentIndex] = array[randIndex];\r\n        array[randIndex] = temp;\r\n      }\r\n      return array;\r\n    }\r\n    let quizDataArray = data.map((quizData) => {\r\n      return {\r\n        ...quizData,\r\n        id: nanoid(),\r\n        userAnswer:'',\r\n        options: getShuffledArray([\r\n          quizData.correct_answer,\r\n          ...quizData.incorrect_answers\r\n        ])\r\n      };\r\n    });\r\n    setQuizData(quizDataArray);\r\n  }\r\n  function btnCheckClickHandler(){\r\n    setIsDone(true);\r\n    let attempt=(quizData.filter(item=>{\r\n      return (item.userAnswer!=='' && (item.userAnswer===item.correct_answer)) \r\n    })).length;\r\n    let unattempt=(quizData.filter(item=>{\r\n      return (item.userAnswer==='') \r\n    })).length;\r\n    setOutputData(\r\n        {attempted:attempt,unattempted:unattempt}\r\n    )\r\n    \r\n  }\r\n  function btnPlayClickHandler(){\r\n    setPlay(prev=>!prev);\r\n    setIsDone(prev=>!prev);\r\n    setOutputData({attempted:0,unattempted:0});\r\n    setQuizData([]);\r\n  }\r\n\r\n  function optionClickHandler(event,quizItem){\r\n    setQuizData(prev=>{\r\n      return prev.map(item=>{\r\n       return (item.id===quizItem.id?{...item,userAnswer:event.target.textContent}:item);\r\n      })\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      {(quizData.length>0) && \r\n        (<div className=\"quiz-box-outer\">\r\n          {quizData.map((quiz) => {\r\n            return <Quiz key={quiz.id} items={quiz} optionClick={optionClickHandler} isDone={isDone}/>;\r\n          })}\r\n          <div className=\"button\">\r\n            {!isDone && <button onClick={btnCheckClickHandler}>Check Answers</button>}\r\n            {isDone && <button onClick={btnPlayClickHandler}>Play Again</button>}\r\n            {isDone && <p className=\"quiz-ouput\">\r\n              <span> correct : {outputData.attempted} Questions</span>\r\n              <span> wrong : {(10-outputData.unattempted)-outputData.attempted} Questions </span>\r\n              <span>unattempted: {outputData.unattempted} </span>\r\n              </p>}\r\n          </div>\r\n        </div>)\r\n      }\r\n      {!quizData.length>0 && <img className=\"loader-image\" src=\"Circles-menu-3.gif\" alt=\"loading\"/>}\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport React from \"react\";\nimport Quizzica from \"./Quizzica\";\nimport QuizzicaQuiz from \"./QuizzicaQuiz\";\n\n\nexport default function App() {\nconst [initial,setInitial]=React.useState(true);\nfunction clickHandler(){\n  setInitial(!initial);\n }\n return <div className=\"App\">\n    {initial && <Quizzica handler={clickHandler}/>}\n    {!initial && <QuizzicaQuiz/>}\n  </div>;\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}